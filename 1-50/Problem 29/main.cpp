#include <iostream>
#include <vector>
#include <algorithm>

#include "gmp.h"

using namespace std;

/*
	How many distinct terms are in the sequence generated by ab
	for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
*/

bool isUsed(mpz_t v, int index, vector<int> a_rules, vector<int> b_rules) {
	int a, b;
	mpz_t e;
	
	//Init
	a = index - 1;
	b = b_rules[1];
	mpz_init(e);
	
	while(a >= a_rules[0] && b >= b_rules[0]) {
		mpz_set_ui(e, a);
		mpz_pow_ui(e, e, b);
		
		if(mpz_cmp(e, v) == 0) {
			return true;
		} else if(mpz_cmp(e, v) > 0) {
			b--;
		} else {
			a--;
			b = b_rules[1];
		}
	}
	
	return false;
}

int countDistinctTerms(vector<int> a_rules, vector<int> b_rules) {
	int a, b, r;
	mpz_t e, e2;
	
	//Init
	r = 0;
	mpz_init(e);
	mpz_init(e2);
	
	for(a = a_rules[0]; a <= a_rules[1]; a++) {
		mpz_set_ui(e, a);
		for(b = b_rules[0]; b <= b_rules[1]; b++) {
			mpz_pow_ui(e2, e, b);
			
			if(!isUsed(e2, a, a_rules, b_rules))
				r++;
		}
	}
	
	return r;
}

int main() {
	cout << "result = " << countDistinctTerms({2, 100}, {2, 100}) << endl;
	
	return 0;
}