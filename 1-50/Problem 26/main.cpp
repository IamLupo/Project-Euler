#include <iostream>
#include <vector>
#include <algorithm>
#include <math.h>
#include <numeric>
#include <fstream>
#include <string.h>
#include <stdlib.h>
#include <set>

using namespace std;

/*
	Find the value of d < 1000 for which 1/d contains the longest
	recurring cycle in its decimal fraction part.
*/

/*
	http://mathworld.wolfram.com/DecimalExpansion.html
*/
static vector<vector<long long>> period_primes = {
	{3,},{11,},{37,},{101,},{41,271,},{7,13,},{239,},{73,137,},{},{},{},{},
	{53,79,},{},{31,},{17,},{},{19,},{},{},{43,},{23,},{},{},{},{859,},{757,},
	{29,281,},{},{211,241,},{},{353,449,641,},{67,},{103,},{71,},{},{},{},{},{},
	{83,},{127,},{173,},{89,},{},{47,139,},{},{},{},{251,},{613,},{521,},{107,},
	{},{},{},{},{59,},{},{61,},{733,},{},{},{},{},{},{},{},{277,},{},{},{},{},{},
	{151,},{},{},{157,},{317,},{},{163,},{},{},{},{},{},{},{617,},{},{},{547,},{},
	{},{},{191,},{97,},{},{197,},{199,397,},{},{},{},{},{},{},{},{643,},{109,},{},
	{331,},{},{113,},{227,},{},{},{349,},{},{},{},{},{},{},{},{},{751,},{},{},{},{},
	{131,},{},{},{},{},{},{},{},{},{},{421,},{283,},{},{},{},{},{293,},{},{149,},{},{},
	{907,},{457,},{307,},{463,},{311,},{},{},{},{},{},{},{},{},{},{},{167,997,},{},{},
	{},{},{},{},{347,},{},{},{},{},{179,},{359,},{181,},{},{},{},{},{},{373,},{},{},{},
	{},{},{193,769,},{773,},{},{},{},{},{},{797,},{401,},{},{607,809,},{},{409,},{},{},
	{},{},{},{},{},{},{853,},{},{431,},{},{},{},{439,},{661,},{443,},{223,},{},{673,},
	{},{},{},{229,},{},{691,},{},{233,},{467,},{},{},{},{},{},{479,},{},{},{},{},{},{},
	{739,},{},{},{},{},{},{},{},{},{},{257,},{},{},{},{},{523,},{263,},{},{},{},{},{},
	{269,},{},{},{},{},{},{},{},{829,},{},{557,},{},{},{563,},{},{},{569,},{},{},{},{},
	{},{},{},{},{587,},{},{},{},{},{},{599,},{601,},{},{},{},{},{},{},{},{},{},{},{},
	{313,},{},{},{631,},{},{},{},{},{},{},{967,},{},{},{},{653,},{},{},{},{},{},{},{},
	{},{},{337,},{},{677,},{},{},{683,},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},
	{},{},{719,},{},{},{},{},{},{},{367,},{},{},{},{},{},{},{},{},{},{},{},{379,},{},
	{761,},{},{383,},{},{},{},{},{},{389,},{},{},{},{},{787,},{},{},{},{},{},{},{},{},
	{},{},{},{},{},{},{},{},{},{},{},{827,},{},{},{},{},{419,},{839,},{},{},{},{},{},
	{},{},{},{},{},{},{},{433,},{},{},{},{},{},{877,},{},{881,},{883,},{},{},{},{},{},
	{},{},{},{},{},{},{},{},{911,},{},{},{},{919,},{461,},{},{},{},{929,},{},{},{},{},
	{},{},{},{},{947,},{},{},{},{},{},{},{},{},{},{},{},{},{487,},{},{},{},{491,},{},
	{},{},{},{991,},{},{},{499,},{},{},{},{503,},{},{},{},{},{},{509,},{},{},{},{},{},
	{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},
	{541,},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},
	{},{},{},{},{},{571,},{},{},{},{},{},{577,},{},{},{},{},{},{},{},{},{},{},{},{},
	{},{},{},{593,},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},
	{},{},{},{},{619,},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},
	{},{},{},{},{},{},{},{647,},{},{},{},{},{},{},{},{},{},{},{},{659,},{},{},{},{},
	{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},
	{},{},{},{},{},{},{},{},{},{},{701,},{},{},{},{},{},{},{},{709,},{},{},{},{},{},
	{},{},{},{},{},{},{},{},{},{},{},{},{727,},{},{},{},{},{},{},{},{},{},{},{},{},
	{},{},{},{743,},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},
	{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},
	{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{811,},{},{},{},{},{},{},
	{},{},{},{821,},{},{823,},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},
	{},{},{},{},{},{},{},{},{},{},{},{},{},{},{857,},{},{},{},{},{},{863,},{},{},{},{},
	{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{887,},{},{},{},{},{},{},
	{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},
	{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{937,},{},{},{},{941,},{},{},{},
	{},{},{},{},{},{},{},{},{953,},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},
	{971,},{},{},{},{},{},{977,},{},{},{},{},{},{983,},{},{},{},{},{},{},{},{},{},{},
	{},{},{},{},{},{},{},{}
};

/*
	http://mathworld.wolfram.com/DecimalExpansion.html
	http://oeis.org/A003592
*/
set<long long> A003592(long long l) {
	set<long long> r;
	std::set<long long>::iterator i, j;
	
	r = {1, 2, 5};
	
	for(i = r.begin(); i != r.end() && *i <= l; i++)
		for(j = r.begin(); j != r.end() && *i * *j <= l; j++)
			r.insert(*i * *j);
	
	return r;
}

/*
int A051626_old(int n) {
	int l, m;
	mpz_t a, b, c, d;
	set<long long> v = A003592(n);
	
	if(v.find(n) != v.end())
		return 0;
	
	//Init
	mpz_init_set_ui(a, 10);
	mpz_init(b);
	mpz_init(c);
	mpz_init(d);
	l = 1;
	
	while(true) {
		// b = 10^l
		mpz_pow_ui(b, a, l);
		for(m = l - 1; m >= 0; m--) {
			// c = 10^m
			mpz_pow_ui(c, a, m);
			
			// d = a - b % n
			mpz_sub(d, b, c);
			mpz_mod_ui(d, d, n);
			
			if(mpz_cmp_ui(d, 0) == 0) {
				//Clear
				mpz_clear(a);
				mpz_clear(b);
				mpz_clear(c);
				mpz_clear(d);
				
				//cout << n << "	" << l << "	" << m << "	" << l - m << endl;
				
				return l - m;
			}
		}
		
		l++;
	}
}
*/

/*
	https://oeis.org/A051626
*/
int A051626(const set<long long> &v, int n) {
	int i, j;
	
	if(v.find(n) != v.end())
		return 0;
	
	for(i = 0; i < period_primes.size(); i++) {
		for(j = 0; j < period_primes[i].size(); j++) {
			if(n % period_primes[i][j] == 0)
				return i + 1;
		}
	}
}

int findLongestCycle(int l) {
	int i, r, t, h;
	set<long long> v;
	
	//Init
	h = 0;
	r = 0;
	v = A003592(l);
	
	for(i = 1; i < l; i++) {
		t = A051626(v, i);
		
		if(h < t) {
			h = t;
			r = i;
		}
	}
	
	return r;
}

int main() {
	cout << "result = " << findLongestCycle(1000) << endl;
	
	return 0;
}